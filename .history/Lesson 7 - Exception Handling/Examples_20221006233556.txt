Exceptions in Python
-------------------------------------------------------------------------
● Python has many built-in exceptions that are raised when your program
encounters an error (something in the program goes wrong).
● When these exceptions occur, the Python interpreter stops the current
process and passes it to the calling process until it is handled.
● If not handled, the program will crash.
● For example, let us consider a program where we have a function A that calls
function B, which in turn calls function C. If an exception occurs in function C
but is not handled in C, the exception passes to B and then to A.
● If never handled, an error message is displayed and the program comes to a
sudden unexpected halt.
Some Common Exceptions
A list of common exceptions that can be thrown from a standard Python program is
given below.
● ZeroDivisionError: This occurs when a number is divided by zero.
● NameError: It occurs when a name is not found. It may be local or global.
● IndentationError: It occurs when incorrect indentation is given.
● IOError: It occurs when an Input-Output operation fails.
● EOFError: It occurs when the end of the file is reached, and yet operations
are being performed.
